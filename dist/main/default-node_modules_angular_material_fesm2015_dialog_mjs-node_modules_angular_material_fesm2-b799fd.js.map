{"version":3,"file":"default-node_modules_angular_material_fesm2015_dialog_mjs-node_modules_angular_material_fesm2-b799fd.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2015/table.mjs","./node_modules/@angular/material/fesm2015/dialog.mjs","./node_modules/@angular/material/fesm2015/paginator.mjs","./node_modules/@angular/material/fesm2015/select.mjs","./node_modules/@angular/material/fesm2015/snack-bar.mjs","./node_modules/@angular/material/fesm2015/sort.mjs","./node_modules/@angular/material/fesm2015/table.mjs"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n_CoalescedStyleScheduler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _CoalescedStyleScheduler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nBaseRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n}\nCdkNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nHeaderRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFooterRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNoDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_ngZone` parameter to become required.\n     * @breaking-change 14.0.0\n     */\n    _ngZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._ngZone = _ngZone;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet.viewContainer,\n            this._headerRowOutlet.viewContainer,\n            this._footerRowOutlet.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach(def => {\n            def.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        // Allow the new row data to render before measuring it.\n        // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n        if (this._ngZone && NgZone.isInAngularZone()) {\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n                this.updateStickyColumnStyles();\n            });\n        }\n        else {\n            this.updateStickyColumnStyles();\n        }\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && (rootNode === null || rootNode === void 0 ? void 0 : rootNode.nodeType) === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n    }\n}\nCdkTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n        { provide: CDK_TABLE, useExisting: CdkTable },\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: DataRowOutlet, selector: \"[rowOutlet]\" }, { type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['role']\n                    }] }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [_VIEW_REPEATER_STRATEGY]\n                    }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                        type: Inject,\n                        args: [_COALESCED_STYLE_SCHEDULER]\n                    }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [STICKY_POSITIONING_LISTENER]\n                    }] }, { type: i0.NgZone, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }, { type: CdkCellDef, selector: \"[cdkCellDef]\" }, { type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkTable, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [TEXT_COLUMN_OPTIONS]\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet] });\nCdkTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, imports: [[ScrollingModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injector, TemplateRef, InjectFlags, Injectable, SkipSelf, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /** Whether to wait for the opening animation to finish before trapping focus. */\n        this.delayFocusTrap = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', group([\n            animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 })),\n            query('@*', animateChild(), { optional: true }),\n        ])),\n        transition('* => void, * => exit', group([\n            animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 })),\n            query('@*', animateChild(), { optional: true }),\n        ])),\n    ]),\n};\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\nclass _MatDialogContainerBase extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, \n    /** The dialog configuration. */\n    _config, _interactivityChecker, _ngZone, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._focusMonitor = _focusMonitor;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /** Initializes the dialog container with the attached content. */\n    _initializeWithAttachedContent() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Moves focus back into the dialog if it was moved out. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const previousElement = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            previousElement &&\n            typeof previousElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    previousElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n}\n_MatDialogContainerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatDialogContainerBase, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogContainerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatDialogContainerBase, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatDialogContainerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1.FocusMonitor }];\n    }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor() {\n        super(...arguments);\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            if (this._config.delayFocusTrap) {\n                this._trapFocus();\n            }\n            this._animationStateChanged.next({ state: 'opened', totalTime });\n        }\n        else if (toState === 'exit') {\n            this._restoreFocus();\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    _initializeWithAttachedContent() {\n        super._initializeWithAttachedContent();\n        if (!this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n    }\n}\nMatDialogContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDialogContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDialogContainer, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\", \"aria-modal\": \"true\" }, listeners: { \"@dialogContainer.start\": \"_onAnimationStart($event)\", \"@dialogContainer.done\": \"_onAnimationDone($event)\" }, properties: { \"id\": \"_id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledBy\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"@dialogContainer\": \"_state\" }, classAttribute: \"mat-dialog-container\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], directives: [{ type: i3.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matDialogAnimations.dialogContainer], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matDialogAnimations.dialogContainer], host: {\n                        'class': 'mat-dialog-container',\n                        'tabindex': '-1',\n                        'aria-modal': 'true',\n                        '[id]': '_id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[@dialogContainer]': '_state',\n                        '(@dialogContainer.start)': '_onAnimationStart($event)',\n                        '(@dialogContainer.done)': '_onAnimationDone($event)',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_overlayRef, _containerInstance, \n    /** Id of the dialog. */\n    id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this._overlayRef.dispose();\n        });\n        _overlayRef\n            .keydownEvents()\n            .pipe(filter(event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            _closeDialogVia(this, 'keyboard');\n        });\n        _overlayRef.backdropClick().subscribe(() => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                _closeDialogVia(this, 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._afterClosed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._overlayRef.updateSize({ width, height });\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    _getPositionStrategy() {\n        return this._overlayRef.getConfig().positionStrategy;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n    // For those, we keep the behavior as is and do not deal with the interaction type.\n    if (ref._containerInstance !== undefined) {\n        ref._containerInstance._closeInteractionType = interactionType;\n    }\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _animationMode) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayRef = this._createOverlay(config);\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n        this.afterOpened.next(dialogRef);\n        // Notify the dialog container that the content has been attached.\n        dialogContainer._initializeWithAttachedContent();\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation,\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogContainer Reference to the wrapping dialog container.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: config.data,\n                dialogRef,\n            }));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef.updateSize(config.width, config.height).updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog.\n     * @param dialogContainer Dialog container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: this._dialogContainerType, useValue: dialogContainer },\n            { provide: this._dialogDataToken, useValue: config.data },\n            { provide: this._dialogRefConstructor, useValue: dialogRef },\n        ];\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     */\n    _removeOpenDialog(dialogRef) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                this._getAfterAllClosed().next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /** Closes all of the dialogs in an array. */\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatDialogBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatDialogBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatDialogBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: undefined }, { type: undefined }, { type: i1$1.OverlayContainer }, { type: undefined }, { type: i0.Type }, { type: i0.Type }, { type: i0.InjectionToken }, { type: undefined }]; } });\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, overlayContainer, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    animationMode) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA, animationMode);\n    }\n}\nMatDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatDialog.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialog });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                        type: Optional\n                    }] }, { type: MatDialogConfig, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DIALOG_SCROLL_STRATEGY]\n                    }] }, { type: MatDialog, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    /**\n     * Reference to the containing dialog.\n     * @deprecated `dialogRef` property to become private.\n     * @breaking-change 13.0.0\n     */\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogClose.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Unique id for the dialog title. If none is supplied, it will be auto-generated. */\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogTitle, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDialogTitle, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-dialog-title\" }, exportAs: [\"matDialogTitle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    host: {\n                        'class': 'mat-dialog-title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDialogContent, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-dialog-content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-dialog-content' },\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatDialogActions, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", host: { classAttribute: \"mat-dialog-actions\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    host: { 'class': 'mat-dialog-actions' },\n                }]\n        }] });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogModule, declarations: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent], imports: [OverlayModule, PortalModule, MatCommonModule], exports: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule] });\nMatDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogModule, providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER], imports: [[OverlayModule, PortalModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, MatCommonModule],\n                    exports: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogContent,\n                        MatDialogActions,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogActions,\n                        MatDialogContent,\n                    ],\n                    providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n","import * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport * as i5 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i3 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i7 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatPaginatorIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() {\n        return this._showFirstLastButtons;\n    }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatPaginatorBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatPaginatorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatPaginatorBase, inputs: { color: \"color\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\" }, outputs: { page: \"page\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatPaginatorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined }]; }, propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input\n            }], showFirstLastButtons: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPaginator.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"], components: [{ type: i2.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\", \"floatLabel\"], exportAs: [\"matFormField\"] }, { type: i3.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\"], exportAs: [\"matSelect\"] }, { type: i4.MatOption, selector: \"mat-option\", exportAs: [\"matOption\"] }, { type: i5.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i7.MatTooltip, selector: \"[matTooltip]\", exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPaginatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, declarations: [MatPaginator], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule], exports: [MatPaginator] });\nMatPaginatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n","import * as i7 from '@angular/cdk/overlay';\nimport { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i8 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0,\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)',\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)',\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSelectTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSelectTrigger, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable.pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() {\n        return this._disableOptionCentering;\n    }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() {\n        return this._typeaheadDebounceInterval;\n    }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        var _a, _b;\n        return this.multiple ? ((_a = this._selectionModel) === null || _a === void 0 ? void 0 : _a.selected) || [] : (_b = this._selectionModel) === null || _b === void 0 ? void 0 : _b.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSelectBase, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatSelectBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatSelectBase, inputs: { panelClass: \"panelClass\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", sortComparator: \"sortComparator\", id: \"id\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSelectBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i6.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }, { type: i4.NgControl, decorators: [{\n                        type: Self\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SELECT_SCROLL_STRATEGY]\n                    }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_SELECT_CONFIG]\n                    }] }];\n    }, propDecorators: { trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disableOptionCentering: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize &&\n                    this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.panel.nativeElement.scrollTop = 0;\n        }\n        else {\n            this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple\n            ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X\n            : SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - ((this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight);\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset = Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelect, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSelect.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSelect, selector: \"mat-select\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"true\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-select-disabled\": \"disabled\", \"class.mat-select-invalid\": \"errorState\", \"class.mat-select-required\": \"required\", \"class.mat-select-empty\": \"empty\", \"class.mat-select-multiple\": \"multiple\" }, classAttribute: \"mat-select\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatSelect },\n        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n    ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], exportAs: [\"matSelect\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\\n\"], directives: [{ type: i7.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { type: i8.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i8.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i8.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i7.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { type: i8.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', inputs: ['disabled', 'disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                        // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                        // value. At some point we should try to switch it back to being `listbox`.\n                        'aria-haspopup': 'true',\n                        'class': 'mat-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-select-disabled]': 'disabled',\n                        '[class.mat-select-invalid]': 'errorState',\n                        '[class.mat-select-required]': 'required',\n                        '[class.mat-select-empty]': 'empty',\n                        '[class.mat-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\\n\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, declarations: [MatSelect, MatSelectTrigger], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule], exports: [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule] });\nMatSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[CommonModule, OverlayModule, MatOptionModule, MatCommonModule], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig } from '@angular/cdk/overlay';\nimport * as i3$1 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, ViewChild, NgModule, Injector, TemplateRef, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/platform';\nimport * as i3$2 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i2$1 from '@angular/cdk/a11y';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe(() => this.dismiss());\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nSimpleSnackBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: SimpleSnackBar, deps: [{ token: MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component });\nSimpleSnackBar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: SimpleSnackBar, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-simple-snackbar\" }, ngImport: i0, template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\", styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\\n\"], components: [{ type: i2.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: SimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-simple-snackbar',\n                    }, template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\", styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SNACK_BAR_DATA]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0,\n        }))),\n    ]),\n};\n\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platform = _platform;\n        this.snackBarConfig = snackBarConfig;\n        /** The number of milliseconds to wait before announcing the snack bar's content. */\n        this._announceDelay = 150;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has announced to screen readers. */\n        this._onAnnounce = new Subject();\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            this._applySnackBarClasses();\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // It's common for snack bars to be opened by random outside calls like HTTP requests or\n        // errors. Run inside the NgZone to ensure that it functions correctly.\n        this._ngZone.run(() => {\n            // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n            // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n            // `MatSnackBar.open`).\n            this._animationState = 'hidden';\n            // Mark this element with an 'exit' attribute to indicate that the snackbar has\n            // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n            // test harness.\n            this._elementRef.nativeElement.setAttribute('mat-exit', '');\n            // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n            // long enough to visually read it either, so clear the timeout for announcing.\n            clearTimeout(this._announceTimeoutId);\n        });\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n            this._ngZone.run(() => {\n                this._onExit.next();\n                this._onExit.complete();\n            });\n        });\n    }\n    /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n    _applySnackBarClasses() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (!this._announceTimeoutId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._announceTimeoutId = setTimeout(() => {\n                    const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n                    const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n                    if (inertElement && liveElement) {\n                        // If an element in the snack bar content is focused before being moved\n                        // track it and restore focus after moving to the live region.\n                        let focusedElement = null;\n                        if (this._platform.isBrowser &&\n                            document.activeElement instanceof HTMLElement &&\n                            inertElement.contains(document.activeElement)) {\n                            focusedElement = document.activeElement;\n                        }\n                        inertElement.removeAttribute('aria-hidden');\n                        liveElement.appendChild(inertElement);\n                        focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.focus();\n                        this._onAnnounce.next();\n                        this._onAnnounce.complete();\n                    }\n                }, this._announceDelay);\n            });\n        }\n    }\n}\nMatSnackBarContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSnackBarContainer, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Platform }, { token: MatSnackBarConfig }], target: i0.ɵɵFactoryTarget.Component });\nMatSnackBarContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSnackBarContainer, selector: \"snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mat-snack-bar-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\"></div>\\n\", styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"], directives: [{ type: i3$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], host: {\n                        'class': 'mat-snack-bar-container',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\"></div>\\n\", styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Platform }, { type: MatSnackBarConfig }]; }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSnackBarModule {\n}\nMatSnackBarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSnackBarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSnackBarModule, declarations: [MatSnackBarContainer, SimpleSnackBar], imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule], exports: [MatSnackBarContainer, MatCommonModule] });\nMatSnackBarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSnackBarModule, imports: [[OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule],\n                    exports: [MatSnackBarContainer, MatCommonModule],\n                    declarations: [MatSnackBarContainer, SimpleSnackBar],\n                }]\n        }] });\n\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\nclass _MatSnackBarBase {\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n    }\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = Object.assign(Object.assign({}, this._defaultConfig), config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = Object.assign(Object.assign(Object.assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef,\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver\n            .observe(Breakpoints.HandsetPortrait)\n            .pipe(takeUntil(overlayRef.detachments()))\n            .subscribe(state => {\n            overlayRef.overlayElement.classList.toggle(this.handsetCssClass, state.matches);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl);\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data },\n            ],\n        });\n    }\n}\n_MatSnackBarBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSnackBarBase, deps: [{ token: i1$1.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$2.BreakpointObserver }, { token: _MatSnackBarBase, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable });\n_MatSnackBarBase.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSnackBarBase });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSnackBarBase, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$2.BreakpointObserver }, { type: _MatSnackBarBase, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: MatSnackBarConfig, decorators: [{\n                        type: Inject,\n                        args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar extends _MatSnackBarBase {\n    constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n        super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        this.handsetCssClass = 'mat-snack-bar-handset';\n    }\n}\nMatSnackBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSnackBar, deps: [{ token: i1$1.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$2.BreakpointObserver }, { token: MatSnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable });\nMatSnackBar.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSnackBar, providedIn: MatSnackBarModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatSnackBarModule }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$2.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: MatSnackBarConfig, decorators: [{\n                        type: Inject,\n                        args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, _MatSnackBarBase, matSnackBarAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Inject, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { AnimationDurations, AnimationCurves, mixinInitialized, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport * as i3 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n}\nMatSortHeaderIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatSortHeaderIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nconst _MatSortBase = mixinInitialized(mixinDisabled(class {\n}));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortBase {\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        var _a, _b, _c;\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = (_b = (_a = sortable === null || sortable === void 0 ? void 0 : sortable.disableClear) !== null && _a !== void 0 ? _a : this.disableClear) !== null && _b !== void 0 ? _b : !!((_c = this._defaultOptions) === null || _c === void 0 ? void 0 : _c.disableClear);\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatSort.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSort, selector: \"[matSort]\", inputs: { disabled: [\"matSortDisabled\", \"disabled\"], active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: { 'class': 'mat-sort' },\n                    inputs: ['disabled: matSortDisabled'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_SORT_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: ['matSortDisableClear']\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nconst _MatSortHeaderBase = mixinDisabled(class {\n});\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderBase {\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._handleStateChanges();\n    }\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        var _a, _b;\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            (_a = this._ariaDescriber) === null || _a === void 0 ? void 0 : _a.removeDescription(this._sortButton, this._sortActionDescription);\n            (_b = this._ariaDescriber) === null || _b === void 0 ? void 0 : _b.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatSortHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSortHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSortHeader, selector: \"[mat-sort-header]\", inputs: { disabled: \"disabled\", id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", sortActionDescription: \"sortActionDescription\", disableClear: \"disableClear\" }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        matSortAnimations.indicator,\n        matSortAnimations.leftPointer,\n        matSortAnimations.rightPointer,\n        matSortAnimations.arrowOpacity,\n        matSortAnimations.arrowPosition,\n        matSortAnimations.allowChildren,\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                    }, {\n                        type: Optional\n                    }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSortModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, declarations: [MatSort, MatSortHeader], imports: [CommonModule, MatCommonModule], exports: [MatSort, MatSortHeader] });\nMatSortModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule, MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSort, MatSortHeader],\n                    declarations: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n}\nMatRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mat-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-table\" }, providers: [\n        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n        //  is only included in the build if used.\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: CdkTable, useExisting: MatTable },\n        { provide: CDK_TABLE, useExisting: MatTable },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'mat-table',\n                        '[class.mat-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n        { provide: CdkColumnDef, useExisting: MatColumnDef },\n        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-footer-row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-no-data-row';\n    }\n}\nMatNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { type: MatCellDef, selector: \"[matCellDef]\" }, { type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, declarations: [\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn\n    ], imports: [CdkTableModule, MatCommonModule], exports: [MatCommonModule,\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn] });\nMatTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, imports: [[CdkTableModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTableModule, MatCommonModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n"],"names":["coerceBooleanProperty","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","DataSource","DOCUMENT","i0","InjectionToken","Directive","Inject","Optional","Input","ContentChild","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","EventEmitter","NgZone","Attribute","SkipSelf","Output","ViewChild","ContentChildren","NgModule","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","i1","i2","i3","ScrollingModule","mixinHasStickyInput","base","constructor","args","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","TemplateRef","ɵdir","type","selector","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","name","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","provide","useExisting","inputs","providers","undefined","decorators","cell","headerCell","footerCell","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","CdkHeaderCell","ElementRef","host","CdkFooterCell","_a","_elementRef","nodeType","tableRole","getAttribute","role","setAttribute","CdkCell","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","subscribe","length","isStable","Promise","resolve","onStable","ɵprov","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","IterableDiffers","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkRowDef","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","ViewContainerRef","CdkHeaderRow","ɵcmp","changeDetection","Default","encapsulation","None","CdkFooterRow","CdkRow","CdkNoDataRow","templateRef","_contentClassName","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","ELEMENT_NODE","i","children","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","useClass","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_dir","_document","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","contentChanged","viewChange","Number","MAX_VALUE","nodeName","trackBy","_trackByFn","fn","ngDevMode","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","forEach","def","clear","_defaultRowDef","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","$implicit","isInAngularZone","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","when","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","first","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","_noDataRowOutlet","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","rootNode","ChangeDetectorRef","Directionality","Platform","ViewportRuler","useValue","exportAs","styles","static","descendants","array","concat","CdkTextColumn","_options","justify","_syncColumnDefName","headerText","_createDefaultHeaderText","dataAccessor","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","EXPORTED_DECLARATIONS","CdkTableModule","ɵmod","ɵinj","exports","declarations","imports","i1$1","Overlay","OverlayConfig","OverlayModule","BasePortalOutlet","CdkPortalOutlet","ComponentPortal","TemplatePortal","PortalModule","Injector","InjectFlags","MatCommonModule","defer","startWith","_getFocusedElementPierceShadowDom","trigger","transition","group","animate","query","animateChild","ESCAPE","hasModifierKey","ANIMATION_MODULE_TYPE","MatDialogConfig","panelClass","hasBackdrop","backdropClass","disableClose","maxWidth","ariaDescribedBy","ariaLabelledBy","ariaLabel","autoFocus","restoreFocus","delayFocusTrap","closeOnNavigation","matDialogAnimations","dialogContainer","opacity","transform","optional","throwMatDialogContentAlreadyAttachedError","_MatDialogContainerBase","_focusTrapFactory","_config","_interactivityChecker","_focusMonitor","_animationStateChanged","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","attachDomPortal","portal","_portalOutlet","hasAttached","_ariaLabelledBy","_initializeWithAttachedContent","_focusTrap","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_trapFocus","_forceFocus","options","isFocusable","tabIndex","runOutsideAngular","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","elementToFocus","focusInitialElementWhenReady","then","focusedSuccessfully","_focusDialogContainer","_restoreFocus","previousElement","activeElement","body","contains","focusVia","destroy","FocusTrapFactory","InteractivityChecker","FocusMonitor","MatDialogContainer","arguments","_state","_onAnimationDone","toState","totalTime","_onAnimationStart","_startExitAnimation","animations","uniqueId","MatDialogRef","_overlayRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","_id","event","clearTimeout","_closeFallbackTimeout","_finishDialogClose","detachments","_result","componentInstance","dispose","keydownEvents","keyCode","preventDefault","_closeDialogVia","backdropClick","close","dialogResult","detachBackdrop","setTimeout","afterOpened","afterClosed","beforeClosed","updatePosition","strategy","_getPositionStrategy","centerHorizontally","centerVertically","updateSize","addPanelClass","classes","removePanelClass","getState","getConfig","positionStrategy","ref","interactionType","result","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","block","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","deps","useFactory","_MatDialogBase","_overlay","_injector","_defaultOptions","_parentDialog","_overlayContainer","scrollStrategy","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","_animationMode","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","afterAllClosed","openDialogs","_getAfterAllClosed","_scrollStrategy","parent","open","componentOrTemplateRef","config","_applyConfigDefaults","getDialogById","overlayRef","_createOverlay","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","_closeDialogs","dialog","overlayConfig","_getOverlayConfig","dialogConfig","global","minWidth","minHeight","maxHeight","disposeOnNavigation","userInjector","viewContainerRef","injector","containerPortal","componentFactoryResolver","containerRef","attach","instance","_createInjector","contentRef","splice","previousValue","overlayContainer","getContainerElement","parentElement","siblings","sibling","hasAttribute","dialogs","OverlayContainer","Type","MatDialog","location","defaultOptions","parentDialog","animationMode","Location","Object","assign","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","proxiedChange","_onButtonClick","screenX","screenY","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogContent","MatDialogActions","MatDialogModule","i6","CommonModule","i4","mixinDisabled","mixinInitialized","i5","MatButtonModule","MatSelectModule","i7","MatTooltipModule","coerceNumberProperty","MatPaginatorIntl","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","getRangeLabel","page","pageSize","Math","max","startIndex","endIndex","min","providedIn","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","_MatPaginatorBase","_intl","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","pageIndex","_updateDisplayedPageSizeOptions","p","_initialized","_markInitialized","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","firstPage","lastPage","getNumberOfPages","maxPageIndex","ceil","_changePageSize","floor","_nextButtonsDisabled","disabled","_previousButtonsDisabled","_displayedPageSizeOptions","sort","a","b","emit","color","MatPaginator","intl","changeDetectorRef","formFieldAppearance","_formFieldAppearance","MatFormField","MatSelect","MatOption","MatButton","NgIf","NgForOf","MatTooltip","OnPush","MatPaginatorModule","CdkConnectedOverlay","i8","Self","mixinDisableRipple","mixinTabIndex","mixinErrorState","_countGroupLabelsBeforeOption","_getOptionScrollPosition","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","MatOptionModule","MAT_FORM_FIELD","MatFormFieldControl","MatFormFieldModule","CdkScrollableModule","ActiveDescendantKeyManager","SelectionModel","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","A","Validators","merge","switchMap","distinctUntilChanged","matSelectAnimations","transformPanelWrap","transformPanel","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","nextUniqueId","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","reposition","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","source","_MatSelectMixinBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","MAT_SELECT_TRIGGER","MatSelectTrigger","_MatSelectBase","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_c","_panelOpen","_compareWith","o1","o2","_uid","_triggerAriaLabelledBy","_destroy","_onChange","_onTouched","_valueId","_panelDoneAnimatingStream","_overlayPanelClass","overlayPanelClass","_focused","controlType","_multiple","_disableOptionCentering","disableOptionCentering","optionSelectionChanges","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","typeaheadDebounceInterval","_typeaheadDebounceInterval","_scrollStrategyFactory","parseInt","focused","placeholder","_placeholder","stateChanges","required","_d","_required","control","hasValidator","multiple","_selectionModel","compareWith","_initializeSelection","_value","newValue","hasAssigned","_assignValue","_panelDoneAnimating","panelOpen","ngAfterContentInit","_initKeyManager","changed","added","select","removed","deselect","_resetOptions","ngDoCheck","newAriaLabelledby","_getTriggerAriaLabelledby","_previousControl","updateErrorState","_keyManager","withTypeAhead","toggle","_canOpen","withHorizontalOrientation","_highlightCorrectOption","_isRtl","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","selected","triggerValue","empty","selectedOptions","viewValue","join","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","altKey","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_onFocus","_onBlur","_onAttached","_overlayDir","positionChange","detectChanges","_positioningSettled","_getPanelTheme","isEmpty","_setSelectionByValue","setInactiveStyles","_selectOptionByValue","_sortValues","correspondingOption","updateActiveItem","isSelected","error","withVerticalOrientation","withHomeAndEnd","withAllowedModifierKeys","tabOut","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","_propagateChanges","setActiveItem","toArray","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","setFirstItemActive","_getPanelAriaLabelledby","labelId","getLabelId","labelExpression","ariaLabelledby","_getAriaActiveDescendant","isOpen","setDescribedByIds","ids","_ariaDescribedby","onContainerClick","shouldLabelFloat","ErrorStateMatcher","NgForm","FormGroupDirective","NgControl","LiveAnnouncer","errorStateMatcher","_scrollTop","_triggerFontSize","_transformOrigin","_offsetY","_positions","originX","originY","overlayX","overlayY","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_triggerRect","getComputedStyle","fontSize","_calculateOverlayPosition","overlayElement","labelCount","optionGroups","scrollTop","_calculateOverlayOffsetX","offsetX","overlayRect","viewportSize","getViewportSize","paddingWidth","leftOverflow","rightOverflow","round","_calculateOverlayOffsetY","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","_getItemCount","selectedDisplayIndex","partialItemHeight","_checkOverlayWithinViewport","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","panelHeight","scrollContainerHeight","selectedOptionOffset","CdkOverlayOrigin","NgSwitch","NgSwitchCase","NgSwitchDefault","NgClass","customTrigger","i3$1","i3$2","Breakpoints","i2$1","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","duration","horizontalPosition","verticalPosition","MAX_TIMEOUT","pow","MatSnackBarRef","containerInstance","_afterDismissed","_onAction","_dismissedByAction","onAction","dismiss","_onExit","_finishDismiss","closed","exit","_durationTimeoutId","dismissWithAction","closeWithAction","_dismissAfter","_open","dismissedByAction","afterDismissed","_onEnter","SimpleSnackBar","snackBarRef","action","hasAction","matSnackBarAnimations","snackBarState","MatSnackBarContainer","snackBarConfig","_announceDelay","_onAnnounce","_animationState","_assertNotAttached","_applySnackBarClasses","_live","FIREFOX","_role","onAnimationEnd","fromState","_completeExit","onEnter","run","enter","_screenReaderAnnounce","_announceTimeoutId","onMicrotaskEmpty","panelClasses","cssClass","inertElement","liveElement","focusedElement","document","HTMLElement","MatSnackBarModule","MAT_SNACK_BAR_DEFAULT_OPTIONS","factory","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","_MatSnackBarBase","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","_openedSnackBarRef","openFromComponent","component","_attach","openFromTemplate","message","simpleSnackBarComponent","_attachSnackBarContainer","snackBarContainerComponent","content","userConfig","observe","HandsetPortrait","handsetCssClass","matches","_animateSnackBar","isLeft","isRight","BreakpointObserver","MatSnackBar","live","breakpointObserver","parentSnackBar","defaultConfig","AnimationDurations","AnimationCurves","keyframes","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MatSortHeaderIntl","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","MAT_SORT_DEFAULT_OPTIONS","_MatSortBase","MatSort","sortables","_direction","sortChange","disableClear","_disableClear","register","sortable","deregister","active","getNextSortDirection","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","sortOrder","_MatSortHeaderBase","MatSortHeader","_sort","_columnDef","_ariaDescriber","_showIndicatorHint","_viewState","_arrowDirection","_disableViewStateAnimation","_sortActionDescription","_handleStateChanges","sortActionDescription","_updateSortActionDescription","_updateArrowDirection","_setAnimationTransitionState","_isSorted","_sortButton","ngAfterViewInit","monitor","origin","newState","_setIndicatorHintVisible","stopMonitoring","_rerenderSubscription","visible","_isDisabled","viewState","_toggleOnInteraction","_handleClick","_getArrowDirectionState","_getArrowViewState","_getAriaSortAttribute","_renderArrow","newDescription","removeDescription","describe","AriaDescriber","MatSortModule","_isNumberValue","combineLatest","MatRecycleRows","MatTable","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","MatFooterRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatNoDataRow","MatTextColumn","MatTableModule","MAX_SAFE_INTEGER","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","keys","currentTerm","key","toLowerCase","transformedFilter","trim","_updateChangeSubscription","_filterData","paginator","_paginator","initialized","pageChange","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","MatTableDataSource"],"sourceRoot":"webpack:///"}